#include <stdio.h>
// Function to perform Bubble Sort and track comparisons and swaps
void bubbleSort(int arr[], int n, int *comparisons, int *swaps) {
 int i, j, temp;
 *comparisons = 0;
 *swaps = 0;
 // Outer loop for each pass
 for (i = 0; i < n - 1; i++) {
 // Inner loop for each comparison and possible swap
 for (j = 0; j < n - i - 1; j++) {
 (*comparisons)++; // Increment comparisons
 if (arr[j] > arr[j + 1]) {
 // Swap the elements if they are in the wrong order
 temp = arr[j];
 arr[j] = arr[j + 1];
 arr[j + 1] = temp;
 (*swaps)++; // Increment swaps
 }
 }
 }
}
// Function to print the array
void printArray(int arr[], int n) {
 for (int i = 0; i < n; i++) {
 printf("%d ", arr[i]);
 }
 printf("\n");
}
int main() {
 int n, comparisons, swaps;
 
 // Input the size of the array
 printf("Enter the number of elements: ");
 scanf("%d", &n);
 
 int arr[n];
 
 // Input the array elements
 printf("Enter the elements: ");
 for (int i = 0; i < n; i++) {
 scanf("%d", &arr[i]);
 }
 
 // Call bubbleSort function
 bubbleSort(arr, n, &comparisons, &swaps);
 
 // Output the sorted array
 printf("Sorted array: ");
 printArray(arr, n);
 
 // Output the number of comparisons and swaps
 printf("Number of comparisons: %d\n", comparisons);
 printf("Number of swaps: %d\n", swaps);
 return 0;
}
